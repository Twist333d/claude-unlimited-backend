name: CI/CD Pipeline

on:
  push:
    branches:
      - prod
  pull_request:
    branches:
      - prod
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to production'
        required: true
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi
    - name: Run tests
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_PROD_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_PROD_KEY }}
        SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_PROD_JWT_TOKEN }}
      run: |
        poetry run pytest app/tests

  deploy-production:
    needs: [test, test-staging]
    if: github.ref == 'refs/heads/prod' || (github.event.inputs.environment == 'production' && github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Heroku Production
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git push https://heroku:$HEROKU_API_KEY@git.heroku.com/${{ secrets.HEROKU_PRODUCTION_APP }}.git HEAD:main

  test-production:
    needs: deploy-production
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi
    - name: Run production tests
      env:
        ENV: production
        SUPABASE_URL: ${{ secrets.SUPABASE_PROD_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_PROD_KEY }}
        SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_PROD_JWT_TOKEN }}
        BASE_URL: ${{ secrets.PRODUCTION_URL }}
      run: |
        poetry run pytest app/tests