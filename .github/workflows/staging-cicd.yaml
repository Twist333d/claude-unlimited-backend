name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
    - name: Clean environment
      run: |
        pip uninstall -y jwt pyjwt
        rm -rf ~/.cache/pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi
    - name: Debug dependencies
      run: |
        pip freeze
        python -c "import jwt; print(jwt.__file__)"
    - name: Run tests
      env:
        APP_ENV: staging
        SUPABASE_URL: ${{ secrets.SUPABASE_STAGING_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_STAGING_KEY }}
        SUPABASE_JWT_SECRET: ${{ secrets.SUPABASE_STAGING_JWT_TOKEN }}
        TEST_USER_ID: ${{ secrets.STAGING_TEST_USER_ID }}
        TEST_CONVERSATION_ID: ${{ secrets.STAGING_TEST_CONVERSATION_ID }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        poetry run pytest app/tests

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'pull_request' && github.base_ref == 'dev')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to Heroku Staging
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        git push https://heroku:$HEROKU_API_KEY@git.heroku.com/${{ secrets.HEROKU_STAGING_APP }}.git HEAD:refs/heads/main

  test-staging:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi
    - name: Run staging tests
      env:
        APP_ENV: staging
        BASE_URL: ${{ secrets.STAGING_URL }}
        TEST_USER_ID: ${{ secrets.STAGING_TEST_USER_ID }}
        TEST_CONVERSATION_ID: ${{ secrets.STAGING_TEST_CONVERSATION_ID }}
      run: |
        poetry run pytest app/tests